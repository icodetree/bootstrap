/*============================================================
* Description : 로딩바
*============================================================*/

.game-load {
	$offsetNumber: 187;
	$duration: 1.4s;

	background: rgb(79, 49, 246);
	background: -moz-linear-gradient(
		25deg,
		rgba(79, 49, 246, 1) 30%,
		rgba(49, 130, 246, 1) 70%
	);
	background: -webkit-linear-gradient(
		25deg,
		rgba(79, 49, 246, 1) 30%,
		rgba(49, 130, 246, 1) 70%
	);
	background: linear-gradient(
		25deg,
		rgba(79, 49, 246, 1) 30%,
		rgba(49, 130, 246, 1) 70%
	);
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#4f31f6",endColorstr="#3182f6",GradientType=1);

	&__spinner {
		position: absolute;
		left: 50%;
		top: 50%;
		z-index: 1;
		margin: -110px 0 0 -110px;
		animation: rotator $duration linear infinite;
	}

	@keyframes rotator {
		0% {
			transform: rotate(0deg);
		}
		100% {
			transform: rotate(270deg);
		}
	}

	&__img {
		position: absolute;
		left: 50%;
		top: 50%;
		z-index: 1;
		transform: translate(-50%, -50%);
		width: 160px;
	}

	&__path {
		stroke-dasharray: $offsetNumber;
		stroke-dashoffset: 0;
		transform-origin: center;
		animation: dashs $duration ease-in-out infinite,
			colors ($duration * 4) ease-in-out infinite;
	}

	@keyframes colors {
		0% {
			stroke: #fff;
		}
		25% {
			stroke: #4285f4;
		}
		50% {
			stroke: #fff;
		}
		75% {
			stroke: #4285f4;
		}
		100% {
			stroke: #fff;
		}
	}

	@keyframes dashs {
		0% {
			stroke-dashoffset: $offsetNumber;
		}
		50% {
			stroke-dashoffset: calc($offsetNumber / 4);
			transform: rotate(135deg);
		}
		100% {
			stroke-dashoffset: $offsetNumber;
			transform: rotate(450deg);
		}
	}

	&__msg {
		position: absolute;
		left: 50%;
		top: 70%;
		z-index: 1;
		transform: translate(-50%, -50%);

		font-size: 1.6rem;
		color: #fff;
		text-align: center;
		line-height: 1.5;
	}
}

/* REVERSE SPINNER */
.loader {
	&-spinner {
		position: relative;
		height: 4rem;
		width: 4rem;
		border: 0.2rem solid transparent;
		border-top-color: $primary;
		border-left-color: $primary;
		border-radius: 50%;
		-webkit-animation: spin 1.5s linear infinite;
		animation: spin 1.5s linear infinite;
	}

	&-spinner::before {
		position: absolute;
		top: 0.5rem;
		left: 0.5rem;
		right: 0.5rem;
		bottom: 0.5rem;
		content: "";
		border: 0.2rem solid transparent;
		border-top-color: $primary;
		border-left-color: $primary;
		border-radius: 50%;
		-webkit-animation: spinBack 1s linear infinite;
		animation: spinBack 1s linear infinite;
	}
}

@keyframes spin {
	from {
		-webkit-transform: rotate(0deg);
		transform: rotate(0deg);
	}
	to {
		-webkit-transform: rotate(360deg);
		transform: rotate(360deg);
	}
}

@keyframes spinBack {
	from {
		-webkit-transform: rotate(0deg);
		transform: rotate(0deg);
	}
	to {
		-webkit-transform: rotate(-720deg);
		transform: rotate(-720deg);
	}
}

/* CIRCLE DOT LOADER */

.circle-loader {
	position: relative;
	width: auto;
	height: auto;
}

.circle-loader div {
	height: 10px;
	width: 10px;
	background-color: $primary;
	border-radius: 50%;
	position: absolute;
	-webkit-animation: 0.8s opaque ease-in-out infinite both;
	animation: 0.8s opaque ease-in-out infinite both;
}

.circle-loader > div:nth-child(1) {
	top: -25px;
	left: 0;
}
.circle-loader > div:nth-child(2) {
	top: -17px;
	left: 17px;
	-webkit-animation-delay: 0.1s;
	animation-delay: 0.1s;
}
.circle-loader > div:nth-child(3) {
	top: 0;
	left: 25px;
	-webkit-animation-delay: 0.2s;
	animation-delay: 0.2s;
}
.circle-loader > div:nth-child(4) {
	top: 17px;
	left: 17px;
	-webkit-animation-delay: 0.3s;
	animation-delay: 0.3s;
}
.circle-loader > div:nth-child(5) {
	top: 25px;
	left: 0;
	-webkit-animation-delay: 0.4s;
	animation-delay: 0.4s;
}
.circle-loader > div:nth-child(6) {
	top: 17px;
	left: -17px;
	-webkit-animation-delay: 0.5s;
	animation-delay: 0.5s;
}
.circle-loader > div:nth-child(7) {
	top: 0;
	left: -25px;
	-webkit-animation-delay: 0.6s;
	animation-delay: 0.6s;
}
.circle-loader > div:nth-child(8) {
	top: -17px;
	left: -17px;
	-webkit-animation-delay: 0.7s;
	animation-delay: 0.7s;
}

@keyframes opaque {
	0% {
		opacity: 0.1;
	}
	40% {
		opacity: 1;
	}
	80% {
		opacity: 0.1;
	}
	100% {
		opacity: 0.1;
	}
}

@supports (-webkit-appearance: none) {
	progress,
	meter {
		/* Reset the default appearance */
		-webkit-appearance: none;
		appearance: none;
	}

	/*gets rid of all pseudo elements*/
	::-webkit-progress-inner-element,
	::-webkit-progress-bar,
	::-webkit-progress-value {
		display: none;
	}

	::-webkit-meter-bar,
	::-webkit-meter-optimum-value,
	::-webkit-meter-suboptimum-value,
	::-webkit-meter-even-less-good-value {
		display: none;
	}

	/* overlays text*/
	.chart__progress:after {
		content: attr(value) "%";
		position: absolute;
		top: 8px;
		right: 8px;
		bottom: 8px;
		left: 8px;
		background: white;
		border-radius: 50%;
		color: black;
		display: flex;
		align-items: center;
		justify-content: center;
		font-size: 1rem;
		font-weight: 700;
	}

	/*using a conical gradient to create the doughnut chart  */
	.chart__progress {
		position: relative;
		width: 100px;
		height: 100px;
		border-radius: 50%;
		--fill: calc(var(--progress) * 1%);
		background: conic-gradient(CornflowerBlue var(--fill), lightgrey 0);
	}

	/* just to change the fill color*/
	meter.chart__progress {
		background: conic-gradient(tomato var(--fill), lightgrey 0);
	}
}

// VARIABLES
$default-delay: 0.2s;
$bars: 15;
$graph-height: 15rem;

// MIXINS

//Horizontal Bar Color Mixin
@mixin stat-bar($color-dark, $color-light, $direction, $dir-webkit) {
	background-image: linear-gradient(
		$direction,
		$color-light 0%,
		$color-dark 100%
	);
}
@mixin shadow-bar($color-dark, $color-light, $direction, $dir-webkit) {
	background-image: linear-gradient(
		$direction,
		$color-light 0%,
		$color-light 50%,
		$color-dark 50%,
		$color-dark 100%
	);
}
// Animation Mixin
@mixin bar-animation($time, $dimension) {
	visibility: hidden;
	@if $dimension == width {
		width: 0;
		animation: animate-width;
	}
	@if $dimension == height {
		height: 0;
		animation: animate-height;
	}
	animation-timing-function: cubic-bezier(0.35, 0.95, 0.67, 0.99);
	animation-duration: $time * 2;
	animation-fill-mode: forwards;
}
@keyframes animate-width {
	0% {
		width: 0;
	}
	100% {
		visibility: visible;
	}
}
@keyframes animate-height {
	0% {
		height: 0;
	}
	100% {
		visibility: visible;
	}
}

//STYLES

#bar-chart {
	width: 100%;
	height: 100%;
	position: relative;

	.graph_wrap {
		position: relative;
		height: $graph-height;
	}
	.bars {
		position: absolute;
		bottom: 10%;
		display: flex;
		width: 70%;
		height: $graph-height;
		margin: 0 15%;
	}
	.bar-group {
		position: relative;
		height: 100%;

		flex: 1;
		display: flex;
		justify-content: center;

		.bar {
			@include bar-animation($default-delay, height);

			position: absolute;
			bottom: 0;
			width: 40%;
			height: 0;
			// box-shadow: 1px 0 5px rgba(0, 0, 0, 0.15);
			border-radius: 0.5rem 0.5rem 0 0;
			cursor: pointer;
			perspective: 400px;
			background-color: #eff5fe;

			span {
				display: inline-block;
				font-size: 1.2rem;
				position: absolute;
				top: -2rem;
				left: 50%;
				z-index: 100;
				transform: translateX(-50%);
			}

			// &::before {
			// 	display: block;
			// 	content: "";
			// 	position: absolute;
			// 	right: 0;
			// 	bottom: 0;
			// 	z-index: 10;
			// 	width: 40%;
			// 	height: 100%;
			// 	background-color: #000;
			// 	opacity: 0.1;
			// 	border-radius: 0 0.25rem 0 0;
			// 	overflow: hidden;
			// }
			// &::after {
			// 	display: block;
			// 	content: "";
			// 	position: absolute;
			// 	right: 40%;
			// 	bottom: 0%;
			// 	z-index: 100;
			// 	width: 1px;
			// 	height: 70%;
			// 	opacity: 0.05;
			// 	@include stat-bar(transparent, #fff, to top, bottom);
			// }
		}
		@for $i from 1 through 15 {
			.bar-#{$i} {
				animation-delay: $default-delay + 0.1 * $i;
			}
		}
	}
	ul {
		list-style: none;
		margin: 0;
		padding: 0;
	}

	.x-axis {
		bottom: -5%;
		position: absolute;
		width: 70%;
		margin: 0 15%;

		display: flex;
		justify-content: space-around;

		li {
			display: flex;
			justify-content: center;
			font-size: 1.2rem;
		}
	}

	.stat-1 {
		@include stat-bar(#cf3a02, #ff4500, to bottom, top);
	}
	.stat-2 {
		@include stat-bar(#79a602, #b8f123, to bottom, top);
	}
	.stat-3 {
		@include stat-bar(#0383a9, #00c5ff, to bottom, top);
	}
	.stat-4 {
		@include stat-bar(#eff5fe, #eff5fe, to bottom, top);
	}
}

/*============================================================
* Description : 단어게임 애니메이션
*============================================================*/

.game {
	&__info {
		// display: none;
		width: 50%;
		height: 20rem;
		position: fixed;
		left: 50%;
		bottom: 20%;
		z-index: 99;
		transform: translate(-50%);
		margin: 0 auto;
		font-size: 0.8rem;
		text-align: center;
		color: #fff;
	}

	&__info--time {
		font-size: 3rem;
	}

	&__info--score {
		font-size: 3rem;
	}

	&__button--start {
		width: 10rem;
		height: 3rem;
		border-radius: 50px;
		background-color: $primary;
		color: #fff;
		margin-top: 3rem;
		cursor: pointer;
	}

	&--loading {
		background: #ccc;
		cursor: not-allowed;
	}
}

.move {
	transform: translateY(120vh);
}

.optionLayer .popups__box {
	transition: top 0.1s linear;
	top: -50%;
}

.optionLayer .popups__dimmed {
	top: -100%;
}

.game__button.closeBtn {
	transition: all 0.5s ease-in-out;
	margin-right: -15rem;
	transform: rotate(-360deg);
}

.step {
	&--next {
		overflow: hidden;
		&::after {
			content: "";
			position: absolute;
			left: 0;
			top: 0;
			z-index: 1;
			width: 100%;
			height: 100%;
			border-radius: 5.2rem;
			background-color: $primary;
		}
		span {
			display: inline-block;
		}
	}
	&--5 {
		&::after {
			animation: step-animation 5s linear forwards;
		}
	}
	&--10 {
		&::after {
			animation: step-animation 10s linear forwards;
		}
	}
	&--60 {
		&::after {
			animation: step-animation 60s linear forwards;
		}
	}
}

@keyframes step-animation {
	0% {
		left: -100%;
	}
	100% {
		left: 0;
	}
}

// 레벨게이지

.animated-progress {
	height: 0.8rem;
	border-radius: 8px;
	position: relative;
	background-color: $gray-400;

	&::before {
		position: absolute;
		left: 0;
		bottom: -2rem;
		z-index: 100;

		content: "0";
		display: inline-block;
		color: $gray-500;
		font-size: 1.2rem;
		opacity: 0.5;
	}
	&::after {
		position: absolute;
		right: 0;
		bottom: -2rem;
		z-index: 100;

		content: "100";
		display: inline-block;
		color: $gray-500;
		font-size: 1.2rem;
		opacity: 0.5;
	}

	span {
		position: relative;
		display: block;
		width: 0;
		height: 100%;
		color: $white;
		position: absolute;
		border-radius: 8px;
		background-color: $primary;
	}
}

// arrow animation
.arrow {
	--active: #fff;
	--border: rgba(255, 255, 255, 0.12);
	display: block;
	position: relative;
	width: 44px;
	height: 44px;
	background-color: $primary;
	border-radius: 5rem;

	&.left {
		transform: scaleX(-1);
	}

	i {
		display: block;
		position: absolute;
		margin: -10px 0 0 -10px;
		width: 20px;
		height: 20px;
		left: 50%;
		top: 50%;

		&:before,
		&:after {
			content: "";
			width: 10px;
			height: 2px;
			border-radius: 1px;
			position: absolute;
			left: 50%;
			top: 50%;
			background: var(--active);
			margin: -1px 0 0 -5px;
			display: block;
			transform-origin: 9px 50%;
		}

		&:before {
			transform: rotate(-40deg);
		}

		&:after {
			transform: rotate(40deg);
		}
	}

	&:before,
	&:after {
		content: "";
		display: block;
		position: absolute;
		left: 1px;
		right: 1px;
		top: 1px;
		bottom: 1px;
		border-radius: 50%;
		border: 2px solid var(--border);
	}

	svg {
		width: 44px;
		height: 44px;
		display: block;
		position: relative;
		z-index: 1;
		color: var(--active);
		stroke-width: 2px;
		stroke-dashoffset: 126;
		stroke-dasharray: 126 126 0;
		transform: rotate(0deg);
	}

	&.animate {
		svg {
			animation: stroke 1s ease forwards 0.3s;
		}

		i {
			animation: arrow 1.6s ease forwards;

			&:before {
				animation: arrowUp 1.6s ease forwards;
			}

			&:after {
				animation: arrowDown 1.6s ease forwards;
			}
		}
	}
}

@keyframes stroke {
	52% {
		transform: rotate(-180deg);
		stroke-dashoffset: 0;
	}

	52.1% {
		transform: rotate(-360deg);
		stroke-dashoffset: 0;
	}

	100% {
		transform: rotate(-180deg);
		stroke-dashoffset: 126;
	}
}

@keyframes arrow {
	0%,
	100% {
		transform: translateX(0);
		opacity: 1;
	}

	23% {
		transform: translateX(17px);
		opacity: 1;
	}

	24%,
	80% {
		transform: translateX(-22px);
		opacity: 0;
	}

	81% {
		opacity: 1;
		transform: translateX(-22px);
	}
}

@keyframes arrowUp {
	0%,
	100% {
		transform: rotate(-40deg) scaleX(1);
	}

	20%,
	80% {
		transform: rotate(0deg) scaleX(0.1);
	}
}

@keyframes arrowDown {
	0%,
	100% {
		transform: rotate(40deg) scaleX(1);
	}

	20%,
	80% {
		transform: rotate(0deg) scaleX(0.1);
	}
}

/* countdown */

.countdown {
	position: relative;
	height: 100vh;

	&__second {
		transform: translate(-50%, -50%);

		width: 17rem;
		height: 17rem;
		border: 8px solid #c79fff;
		border-radius: 50%;
		box-shadow: 0 0 5rem 0.2rem #c79fff, inset 0 0 2rem 0.2rem #c79fff;
		strong {
			transform: translate(-50%, -50%);
			color: #c79fff;
			font-size: 5rem;

			width: 14rem;
			height: 14rem;
			border: 2px solid #c79fff;
			border-radius: 50%;
			box-shadow: inset 0 0 2rem 0.2rem #c79fff;

			display: flex;
			justify-content: center;
			align-items: center;
		}
	}
}
